{"version":3,"sources":["app/App.module.scss","app/App.js","index.js"],"names":["module","exports","mainWindow","window","require","remote","getCurrentWindow","ipcRenderer","App","useState","status","setStatus","id","setId","title","setTitle","url","setUrl","isLoading","setLoading","topbar","setTopbar","document","querySelector","webview","setWebview","useEffect","on","event","length","top","classes","webviewContainer","up","className","layout","topbarWrap","onMouseEnter","onMouseLeave","btnWindow","onClick","goBack","goForward","stop","reload","minimize","unmaximize","maximize","closeWindow","send","close","content","src","join","ReactDOM","render","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,OAAS,oBAAoB,iBAAmB,8BAA8B,MAAQ,mBAAmB,UAAY,uBAAuB,YAAc,2B,6HCGnMC,EADaC,OAAOC,QAAQ,YAA1BC,OACkBC,mBAGpBC,EADWJ,OAAOC,QAAQ,YACHG,YAoIdC,EAlIH,KAAO,IAAD,EACcC,oBAAS,GADvB,mBACPC,EADO,KACCC,EADD,OAEMF,mBAAS,IAFf,mBAEPG,EAFO,KAEHC,EAFG,OAGYJ,mBAAS,kBAHrB,mBAGPK,EAHO,KAGAC,EAHA,OAIQN,mBAAS,sBAJjB,mBAIPO,EAJO,KAIFC,EAJE,OAKkBR,oBAAS,GAL3B,mBAKPS,EALO,KAKIC,EALJ,OAMcV,oBAAS,GANvB,mBAMPW,EANO,KAMCC,EAND,OAOgBZ,mBAASa,SAASC,cAAc,YAPhD,mBAOPC,EAPO,KAOEC,EAPF,KASdC,qBAAU,KACND,EAAWH,SAASC,cAAc,YAClChB,EAAYoB,GAAG,WAAW,CAACC,EAAOhB,EAAIE,EAAOE,KACtB,IAAfA,EAAIa,SACJhB,EAAMD,GACNG,EAASD,GACTG,EAAOD,SAGhB,IAEH,IA6CMc,EAAM,CAACC,IAAQC,iBAAkBZ,EAASW,IAAQE,GAAK,IAE7D,OACI,sBAAKC,UAAWH,IAAQI,OAAxB,UACI,qBAAKD,UAAWH,IAAQK,WAAxB,SACI,sBACIF,UAAWH,IAAQX,OACnBiB,aAfO,KACnBhB,GAAU,IAeEiB,aAZS,KACrBjB,GAAU,IAQF,UAKI,gCACI,wBACIa,UAAWH,IAAQQ,UACnBC,QA1DH,KACjBhB,EAAQiB,UAuDQ,SAII,mBAAGP,UAAU,iCAEjB,wBACIA,UAAWH,IAAQQ,UACnBC,QA5DA,KACpBhB,EAAQkB,aAyDQ,SAII,mBAAGR,UAAU,kCAEjB,wBACIA,UAAWH,IAAQQ,UACnBC,QA9DH,KACbtB,GACAM,EAAQmB,OACRxB,GAAW,KAEXK,EAAQoB,SACRzB,GAAW,KAsDC,SAII,mBAAGe,UAAU,qBAGrB,sBAAKA,UAAWH,IAAQjB,MAAxB,UACKA,EADL,MACc,+BAAOE,OAErB,gCACI,wBACIkB,UAAWH,IAAQQ,UACnBC,QA/DK,KACzBtC,EAAW2C,YA4DK,SAII,mBAAGX,UAAU,6BAEjB,wBACIA,UAAWH,IAAQQ,UACnBC,QAjEK,KACrB9B,GACAR,EAAW4C,aACXnC,GAAWD,KAEXR,EAAW6C,WACXpC,GAAWD,KAyDC,SAII,mBAAGwB,UAAU,6BAEjB,wBACIA,UACIH,IAAQQ,UAAY,IAAMR,IAAQiB,YAEtCR,QA/DE,KACtBjC,EAAY0C,KAAK,cAAerC,GAChCV,EAAWgD,SAyDK,SAMI,mBAAGhB,UAAU,kCAM7B,sBAAMA,UAAWH,IAAQoB,QAAzB,SACI,yBAASC,IAAKpC,EAAKkB,UAAWJ,EAAIuB,KAAK,aChIvDC,IAASC,OAAO,cAAC,EAAD,IAASjC,SAASkC,eAAe,W","file":"static/js/main.47b0a997.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"App_layout__1L6So\",\"topbar\":\"App_topbar__2zIOk\",\"webviewContainer\":\"App_webviewContainer__1Uqmf\",\"title\":\"App_title__1KjoW\",\"btnWindow\":\"App_btnWindow__2YUIN\",\"closeWindow\":\"App_closeWindow__1miNY\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './App.module.scss';\r\n\r\nconst { remote } = window.require('electron');\r\nconst mainWindow = remote.getCurrentWindow();\r\n\r\nconst electron = window.require('electron');\r\nconst ipcRenderer = electron.ipcRenderer;\r\n\r\nconst App = () => {\r\n    const [status, setStatus] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [title, setTitle] = useState('Radion Browser');\r\n    const [url, setUrl] = useState('https://google.com');\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [topbar, setTopbar] = useState(false);\r\n    const [webview, setWebview] = useState(document.querySelector('webview'));\r\n\r\n    useEffect(() => {\r\n        setWebview(document.querySelector('webview'));\r\n        ipcRenderer.on('urlOpen', (event, id, title, url) => {\r\n            if (url.length !== 0) {\r\n                setId(id);\r\n                setTitle(title);\r\n                setUrl(url);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        webview.goBack();\r\n    };\r\n\r\n    const handleGoForward = () => {\r\n        webview.goForward();\r\n    };\r\n\r\n    const handleReload = () => {\r\n        if (isLoading) {\r\n            webview.stop();\r\n            setLoading(false);\r\n        } else {\r\n            webview.reload();\r\n            setLoading(true);\r\n        }\r\n    };\r\n\r\n    const handleMinimizeWindow = () => {\r\n        mainWindow.minimize();\r\n    };\r\n\r\n    const handleMaximizeWindow = () => {\r\n        if (status) {\r\n            mainWindow.unmaximize();\r\n            setStatus(!status);\r\n        } else {\r\n            mainWindow.maximize();\r\n            setStatus(!status);\r\n        }\r\n    };\r\n\r\n    const handleCloseWindow = () => {\r\n        ipcRenderer.send('closeWindow', id);\r\n        mainWindow.close();\r\n    };\r\n\r\n    const handleTopbarUp = () => {\r\n        setTopbar(true);\r\n    };\r\n\r\n    const handleTopbarDown = () => {\r\n        setTopbar(false);\r\n    };\r\n\r\n    const top = [classes.webviewContainer, topbar ? classes.up : ''];\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <div className={classes.topbarWrap}>\r\n                <div\r\n                    className={classes.topbar}\r\n                    onMouseEnter={handleTopbarUp}\r\n                    onMouseLeave={handleTopbarDown}\r\n                >\r\n                    <div>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleGoBack}\r\n                        >\r\n                            <i className=\"fal fa-chevron-circle-left\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleGoForward}\r\n                        >\r\n                            <i className=\"fal fa-chevron-circle-right\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleReload}\r\n                        >\r\n                            <i className=\"fal fa-sync\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className={classes.title}>\r\n                        {title} - <span>{url}</span>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleMinimizeWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-minimize\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleMaximizeWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-maximize\" />\r\n                        </button>\r\n                        <button\r\n                            className={\r\n                                classes.btnWindow + ' ' + classes.closeWindow\r\n                            }\r\n                            onClick={handleCloseWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-close\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main className={classes.content}>\r\n                <webview src={url} className={top.join(' ')}></webview>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}