{"version":3,"sources":["app/App.module.scss","app/App.js","index.js"],"names":["module","exports","mainWindow","window","require","remote","getCurrentWindow","ipcRenderer","App","useState","status","setStatus","id","setId","title","setTitle","url","setUrl","isLoading","setLoading","document","querySelector","webview","setWebview","isTop","setIsTop","useEffect","on","event","valid","test","length","className","classes","layout","topbarWrap","topbar","btnWindow","onClick","goBack","goForward","stop","reload","send","handlerDownWindow","handlerTopWindow","minimize","unmaximize","maximize","closeWindow","close","content","src","webviewContainer","ReactDOM","render","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,OAAS,oBAAoB,iBAAmB,8BAA8B,MAAQ,mBAAmB,UAAY,uBAAuB,YAAc,2B,6HCGnMC,EADaC,OAAOC,QAAQ,YAA1BC,OACkBC,mBAGpBC,EADWJ,OAAOC,QAAQ,YACHG,YAwJdC,EAtJH,KAAO,IAAD,EACcC,oBAAS,GADvB,mBACPC,EADO,KACCC,EADD,OAEMF,mBAAS,IAFf,mBAEPG,EAFO,KAEHC,EAFG,OAGYJ,mBAAS,kBAHrB,mBAGPK,EAHO,KAGAC,EAHA,OAIQN,mBAAS,kCAJjB,mBAIPO,EAJO,KAIFC,EAJE,OAKkBR,oBAAS,GAL3B,mBAKPS,EALO,KAKIC,EALJ,OAMgBV,mBAASW,SAASC,cAAc,YANhD,mBAMPC,EANO,KAMEC,EANF,OAOYd,oBAAS,GAPrB,mBAOPe,EAPO,KAOAC,EAPA,KASdC,qBAAU,KACNH,EAAWH,SAASC,cAAc,YAElCd,EAAYoB,GAAG,WAAW,CAACC,EAAOhB,EAAIE,EAAOE,KACzC,IAAIa,EAAQ,gCAAgCC,KAAKd,GAC9B,IAAfA,EAAIe,QAAgBF,IACpBhB,EAAMD,GACNG,EAASD,GACTG,EAAOD,SAGhB,IAiDH,OACI,sBAAKgB,UAAWC,IAAQC,OAAxB,UACI,qBAAKF,UAAWC,IAAQE,WAAxB,SACI,sBAAKH,UAAWC,IAAQG,OAAxB,UACI,gCACI,wBACIJ,UAAWC,IAAQI,UACnBC,QAtDH,KACjBhB,EAAQiB,UAmDQ,SAII,mBAAGP,UAAU,iCAEjB,wBACIA,UAAWC,IAAQI,UACnBC,QAxDA,KACpBhB,EAAQkB,aAqDQ,SAII,mBAAGR,UAAU,kCAEjB,wBACIA,UAAWC,IAAQI,UACnBC,QA1DH,KACbpB,GACAI,EAAQmB,OACRtB,GAAW,KAEXG,EAAQoB,SACRvB,GAAW,KAkDC,SAII,mBAAGa,UAAU,qBAGrB,sBAAKA,UAAWC,IAAQnB,MAAxB,UACKA,EADL,MACc,+BAAOE,OAErB,gCACKQ,EACG,wBACIQ,UAAWC,IAAQI,UACnBC,QAAS,IApCV1B,KACvBL,EAAYoC,KAAK,iBAAkB/B,GAAI,GACvCa,GAAUD,IAkC6BoB,CAAkBhC,GACjCE,MAAM,sBAHV,SAKI,mBAAGkB,UAAU,4BAGjB,wBACIA,UAAWC,IAAQI,UACnBC,QAAS,IAjDX1B,KACtBL,EAAYoC,KAAK,iBAAkB/B,GAAI,GACvCa,GAAUD,IA+C6BqB,CAAiBjC,GAChCE,MAAM,oBAHV,SAKI,mBAAGkB,UAAU,0BAGrB,wBACIA,UAAWC,IAAQI,UACnBC,QA5EK,KACzBpC,EAAW4C,YAyEK,SAII,mBAAGd,UAAU,6BAEjB,wBACIA,UAAWC,IAAQI,UACnBC,QA9EK,KACrB5B,GACAR,EAAW6C,aACXpC,GAAWD,KAEXR,EAAW8C,WACXrC,GAAWD,KAsEC,SAII,mBAAGsB,UAAU,6BAEjB,wBACIA,UACIC,IAAQI,UAAY,IAAMJ,IAAQgB,YAEtCX,QA5EE,KACtB/B,EAAYoC,KAAK,cAAe/B,GAChCV,EAAWgD,SAsEK,SAMI,mBAAGlB,UAAU,kCAM7B,sBAAMA,UAAWC,IAAQkB,QAAzB,SACa,mCAARnC,EACG,yBACIoC,IAAKpC,EACLgB,UAAWC,IAAQoB,mBAEvB,WCpJpBC,IAASC,OAAO,cAAC,EAAD,IAASnC,SAASoC,eAAe,W","file":"static/js/main.d30ea8dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"App_layout__1L6So\",\"topbar\":\"App_topbar__2zIOk\",\"webviewContainer\":\"App_webviewContainer__1Uqmf\",\"title\":\"App_title__1KjoW\",\"btnWindow\":\"App_btnWindow__2YUIN\",\"closeWindow\":\"App_closeWindow__1miNY\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './App.module.scss';\r\n\r\nconst { remote } = window.require('electron');\r\nconst mainWindow = remote.getCurrentWindow();\r\n\r\nconst electron = window.require('electron');\r\nconst ipcRenderer = electron.ipcRenderer;\r\n\r\nconst App = () => {\r\n    const [status, setStatus] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [title, setTitle] = useState('Radion Browser');\r\n    const [url, setUrl] = useState('Invalid URL or Not connection!');\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [webview, setWebview] = useState(document.querySelector('webview'));\r\n    const [isTop, setIsTop] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setWebview(document.querySelector('webview'));\r\n\r\n        ipcRenderer.on('urlOpen', (event, id, title, url) => {\r\n            let valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(url);\r\n            if (url.length !== 0 && valid) {\r\n                setId(id);\r\n                setTitle(title);\r\n                setUrl(url);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        webview.goBack();\r\n    };\r\n\r\n    const handleGoForward = () => {\r\n        webview.goForward();\r\n    };\r\n\r\n    const handleReload = () => {\r\n        if (isLoading) {\r\n            webview.stop();\r\n            setLoading(false);\r\n        } else {\r\n            webview.reload();\r\n            setLoading(true);\r\n        }\r\n    };\r\n\r\n    const handleMinimizeWindow = () => {\r\n        mainWindow.minimize();\r\n    };\r\n\r\n    const handleMaximizeWindow = () => {\r\n        if (status) {\r\n            mainWindow.unmaximize();\r\n            setStatus(!status);\r\n        } else {\r\n            mainWindow.maximize();\r\n            setStatus(!status);\r\n        }\r\n    };\r\n\r\n    const handleCloseWindow = () => {\r\n        ipcRenderer.send('closeWindow', id);\r\n        mainWindow.close();\r\n    };\r\n\r\n    const handlerTopWindow = (id) => {\r\n        ipcRenderer.send('on-top-browser', id, true);\r\n        setIsTop(!isTop);\r\n    };\r\n\r\n    const handlerDownWindow = (id) => {\r\n        ipcRenderer.send('on-top-browser', id, false);\r\n        setIsTop(!isTop);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <div className={classes.topbarWrap}>\r\n                <div className={classes.topbar}>\r\n                    <div>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleGoBack}\r\n                        >\r\n                            <i className=\"fal fa-chevron-circle-left\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleGoForward}\r\n                        >\r\n                            <i className=\"fal fa-chevron-circle-right\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleReload}\r\n                        >\r\n                            <i className=\"fal fa-sync\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className={classes.title}>\r\n                        {title} - <span>{url}</span>\r\n                    </div>\r\n                    <div>\r\n                        {isTop ? (\r\n                            <button\r\n                                className={classes.btnWindow}\r\n                                onClick={() => handlerDownWindow(id)}\r\n                                title=\"Unpin on top of all\"\r\n                            >\r\n                                <i className=\"fal fa-arrow-from-top\"></i>\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className={classes.btnWindow}\r\n                                onClick={() => handlerTopWindow(id)}\r\n                                title=\"Pin on top of all\"\r\n                            >\r\n                                <i className=\"fal fa-arrow-to-top\"></i>\r\n                            </button>\r\n                        )}\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleMinimizeWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-minimize\" />\r\n                        </button>\r\n                        <button\r\n                            className={classes.btnWindow}\r\n                            onClick={handleMaximizeWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-maximize\" />\r\n                        </button>\r\n                        <button\r\n                            className={\r\n                                classes.btnWindow + ' ' + classes.closeWindow\r\n                            }\r\n                            onClick={handleCloseWindow}\r\n                        >\r\n                            <i className=\"fal fa-window-close\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main className={classes.content}>\r\n                {url !== 'Invalid URL or Not connection!' ? (\r\n                    <webview\r\n                        src={url}\r\n                        className={classes.webviewContainer}\r\n                    ></webview>\r\n                ) : null}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}